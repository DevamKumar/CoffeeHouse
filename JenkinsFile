pipeline {
    agent {
        docker {
            image 'gradle:jdk21-alpine'
            args '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'HEAD', url: 'https://github.com/devamkumar/coffeehouse.git'
            }
        }

        stage('Build Application') {
            steps {
                sh './gradlew clean build -x test'
            }
        }

        stage('Run Tests') {
            steps {
                echo 'Skipping tests for brevity. Uncomment "sh ./gradlew test" to enable.'
            }
        }

        stage('Docker Build and Push') {
            environment {
                DOCKER_IMAGE_NAME = 'devamkumar/coffeehouse'
                IMAGE_TAG = "${env.BUILD_NUMBER}"
            }
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub-devamkumar',
                    usernameVariable: 'DOCKER_HUB_USERNAME',
                    passwordVariable: 'DOCKER_HUB_PASSWORD')
                    ]) {
                    sh "echo \"$DOCKER_HUB_PASSWORD\" | docker login -u \"$DOCKER_HUB_USERNAME\" --password-stdin"
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} ."
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:latest ."
                    sh "docker push ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker push ${DOCKER_IMAGE_NAME}:latest"
                    sh 'docker logout'
                }
            }
        }

        // stage('Deploy to Kubernetes') {
        //     steps {
        //         sh 'kubectl apply -f kubernetesFiles/ -n coffeehouse-app'
        //         sh 'kubectl rollout status deployment/coffeehouse-deployment -n coffeehouse-app'
        //     }
        // }
    }

    post {
        always {
            cleanWs()
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
        }
        success {
            echo 'Pipeline succeeded! Application deployed to Kubernetes.'
        }
    }
}
