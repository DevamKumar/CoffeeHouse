pipeline {
    // Jenkinsfile for CoffeeHouse Spring Boot Application CI/CD

    agent {
        docker {
            image 'gradle:jdk21-alpine' 
            args '-v /var/run/docker.sock:/var/run/docker.sock' 
        }
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'HEAD', url: 'https://github.com/devamkumar/coffeehouse.git'
            }
        }

        stage('Build Application') {
            steps {
                script {
                    sh './gradlew clean build -x test'
                }
            }
        }

        stage('Docker Build and Push') {
            environment {
                DOCKER_HUB_CREDENTIALS_ID = 'dockerhub-devamkumar'
                DOCKER_HUB_USERNAME = credentials(DOCKER_HUB_CREDENTIALS_ID).getUsername()
                DOCKER_HUB_PASSWORD = credentials(DOCKER_HUB_CREDENTIALS_ID).getPassword()

                DOCKER_IMAGE_NAME = 'devamkumar/coffeehouse'
                IMAGE_TAG = "${env.BUILD_NUMBER}"
            }
            steps {
                script {
                    sh "echo \"$DOCKER_HUB_PASSWORD\" | docker login -u \"$DOCKER_HUB_USERNAME\" --password-stdin"
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:${IMAGE_TAG} ."
                    sh "docker build -t ${DOCKER_IMAGE_NAME}:latest ."
                    sh "docker push ${DOCKER_IMAGE_NAME}:${IMAGE_TAG}"
                    sh "docker push ${DOCKER_IMAGE_NAME}:latest"
                    sh 'docker logout'
                }
            }
        }
    }

    post {
        always {
            cleanWs() // This should now work correctly as the agent context will be fully established
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
        }
        success {
            echo 'Pipeline succeeded! Docker image pushed.'
        }
    }
}
